setwd("~/Desktop/juror_fmri/behavior")
# make figure showing: (1.) task schematic, (2.) evidence & scenario effects plot, (3.)correlation plot, & (4.) PCA plot
library(tidyverse)
library(grid)
library(gridExtra)
library(rstan)
library(magick)
library(gtable)
library(gridBase)
#library(factoextra)
library(ggpubr)
library(rjson)
library(ggrepel)
source('ggplot_setup.R')
load('data/stan_postprocess_2v_t.rdata')
effects <- effects %>% filter(group =='mri')
dat <- dat %>% filter(group=='mri')
#get the scenario with the maximum mean rating (scenario 14)
example_scenario <- effects %>% filter(variable == 'gamma', evidence == 'baseline', outcome=='rating') %>%
select(scenario, mean, X2.5., X97.5.) %>%
mutate(outcome='rating',
scenario = factor(scenario))
View(example_scenario)
example_evidence <- effects %>% filter(outcome=='rating',variable == 'mu', evidence != 'baseline') %>%
select(mean, evidence, X2.5., X97.5.) %>%
mutate(evidence=factor(evidence, levels=c("physicalDNA",
"witnessYes Witness",
"historyRelated")))
View(example_evidence)
setwd("~/Desktop/juror_fmri/behavior")
# supplementary figure showing correlation between case strength & punishment
library(tidyverse)
library(grid)
library(gridExtra)
library(gtable)
library(gridBase)
load('data/stan_postprocess_2v_t.rdata')
effects <- effects %>% filter(group =='mri' | group == 'mturk')
panel_A <- ggplot(data=(effects %>% filter(grepl('Omega', variable), evidence=='baseline'))) +
geom_hline(yintercept=0, colour='grey') +
geom_pointrange(aes(x=evidence, y=X50., ymin=X2.5., ymax=X97.5., color=group),
position=position_dodge(width = 0.5)) +
xlab('Type') + ylab('\nCase Strength /\nPunishmnet Correlation') +
group_color_scale +
evidence_plus_baseline_x_axis +
#labs(title="A", size=rel(3)) +
th +
theme(
legend.position=c(0.8, 0.8)
) + theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"))
source('ggplot_setup.R')
load('data/stan_postprocess_2v_t.rdata')
effects <- effects %>% filter(group =='mri' | group == 'mturk')
panel_A <- ggplot(data=(effects %>% filter(grepl('Omega', variable), evidence=='baseline'))) +
geom_hline(yintercept=0, colour='grey') +
geom_pointrange(aes(x=evidence, y=X50., ymin=X2.5., ymax=X97.5., color=group),
position=position_dodge(width = 0.5)) +
xlab('Type') + ylab('\nCase Strength /\nPunishmnet Correlation') +
group_color_scale +
evidence_plus_baseline_x_axis +
#labs(title="A", size=rel(3)) +
th +
theme(
legend.position=c(0.8, 0.8)
) + theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"))
panel_A
panel_A <- ggplot(data=(effects %>% filter(grepl('Omega', variable), evidence=='baseline'))) +
geom_hline(yintercept=0, colour='grey') +
geom_pointrange(aes(x=evidence, y=X50., ymin=X2.5., ymax=X97.5., color=group),
position=position_dodge(width = 0.5)) +
xlab('') + ylab('\nCase Strength /\nPunishmnet Correlation') +
group_color_scale +
evidence_plus_baseline_x_axis +
#labs(title="A", size=rel(3)) +
th +
theme(
legend.position=c(0.8, 0.8)
) + theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"))
panel_A
panel_A <- ggplot(data=(effects %>% filter(grepl('Omega', variable), evidence=='baseline'))) +
geom_hline(yintercept=0, colour='grey') +
geom_pointrange(aes(x=evidence, y=X50., ymin=X2.5., ymax=X97.5., color=group),
position=position_dodge(width = 0.5)) +
xlab('') + ylab('\nCase Strength /\nPunishmnet Correlation') +
group_color_scale +
evidence_plus_baseline_x_axis +
#labs(title="A", size=rel(3)) +
th +
theme(
legend.position=c(0.8, 0.8)
) + theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold")) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
panel_A
fmri_data <- read.csv(file="data/scenario_effects_fmri_sample.csv",
header=TRUE, sep = ",",
na.strings=c("","NA"))
#pca
fmri_data.pca <- prcomp(fmri_data[,c(2:3)],
center = TRUE,
scale. = TRUE)
#summary
summary(fmri_data.pca)
#loadings
fmri_data.pca$rotation
#scores
fmri_data.pca$x
#save results
write.csv(fmri_data.pca$x,
file = "pca_loadings-fmri.csv")
#plotting
fmri_data$case_strength_mean_scaled<- scale(fmri_data$case_strength_mean)
fmri_data$punishment_mean_scaled<- scale(fmri_data$punishment_mean)
mean_cs = mean(fmri_data$case_strength_mean)
sd_cs = sd(fmri_data$case_strength_mean)
mean_pun = mean(fmri_data$punishment_mean)
sd_pun = sd(fmri_data$punishment_mean)
# Self-defined formatting to go back to raw values
z_to_orig_x <- function(x) {
m <- mean_cs
sd <- sd_cs
o <- (x*sd)+m
o <- round(o,0)
lab <- sprintf('%d',o) # Format the strings as HH:MM:SS
}
z_to_orig_y <- function(x) {
m <- mean_pun
sd <- sd_pun
o <- (x*sd)+m
o <- round(o,0)
lab <- sprintf('%d',o) # Format the strings as HH:MM:SS
}
#plot
g <- ggplot(data = fmri_data, mapping = aes(x = case_strength_mean_scaled, y = punishment_mean_scaled))
g <- g + geom_point(size=5,color='#fdaa4c')  # alpha b/c of overplotting
#g <- g + geom_smooth(method = "lm")  # just for comparsion
#g <- g + coord_fixed()  # otherwise, the angles of vectors are off
corre <- cor(x = fmri_data$case_strength_mean_scaled, y = fmri_data$punishment_mean_scaled, method = "pearson")  # calculate correlation, must be spearman b/c of measurement
matrix <- matrix(c(1, corre, corre, 1), nrow = 2)  # make this into a matrix
eigen <- eigen(matrix)  # calculate eigenvectors and values
eigen$vectors.scaled <- eigen$vectors %*% diag(sqrt(eigen$values))
# scale eigenvectors to length = square-root
# as per http://stats.stackexchange.com/questions/9898/how-to-plot-an-ellipse-from-eigenvalues-and-eigenvectors-in-r
# g <- g + stat_ellipse(type = "norm")
# g <- g + stat_ellipse(type = "t")
# add ellipse, though I am not sure which is the adequate type
# as per https://github.com/hadley/ggplot2/blob/master/R/stat-ellipse.R
g <- g + geom_abline(intercept = 0, slope = eigen$vectors.scaled[1,1], colour = "#fdaa4c")  # add slope for pc1
#g <- g + geom_abline(intercept = 0, slope = eigen$vectors.scaled[1,2], colour = "black")  # add slope for pc2
g <- g + scale_x_continuous(labels = z_to_orig_x) + scale_y_continuous(labels = z_to_orig_y) +
xlab('Case Strength') + ylab('Punishment') #+ labs(title="B", size=rel(3))
panel_B <- g + th +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"))
panel_B
#read data
fmri_data <- read.csv(file="data/scenario_effects_fmri_sample.csv",
header=TRUE, sep = ",",
na.strings=c("","NA"))
#correlation plot
plt_b <- ggplot(data = fmri_data,
mapping = aes(x = case_strength_mean,y = punishment_mean)) +
geom_point(color='black',size=2) +
geom_smooth(method='lm', formula= y~x, colour = "black") +
scale_x_continuous(limits = c(0, 25)) +
scale_y_continuous(limits = c(0, 85)) +
xlab('Case Strength') +
ylab('Punishment')
panel_B <- plt_b + th +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"))+
theme(plot.margin=unit(c(5, 5.5, 25.5, 25.5),"points"))
#pca & plot
fmri_data.pca <- prcomp(fmri_data[,c(2:3)],
center = TRUE,
scale. = TRUE)
#summary
summary(fmri_data.pca)
#loadings
fmri_data.pca$rotation
#scores
fmri_data.pca$x
pct_var_exp<- get_eig(fmri_data.pca)
pct_var_exp <- cbind(PC = rownames(pct_var_exp), pct_var_exp)
rownames(pct_var_exp) <- 1:nrow(pct_var_exp)
pct_var_exp$PC_name[pct_var_exp$PC == "Dim.1"] <- "1"
pct_var_exp$PC_name[pct_var_exp$PC == "Dim.2"] <- "2"
pct_var_exp$PC<-pct_var_exp$PC_name
h <- ggplot(pct_var_exp, aes(x = PC, y = variance.percent)) +
geom_point(stat = "identity", size=5)
# h <- fviz_eig(fmri_data.pca, geom="line", addlabels = FALSE, ylim = c(0, 100),
#               linecolor = c('black'),
#               xlab=c('PC')) +
#   labs(title=" ")
panel_B <- h + th + ylab('Variance Explained (%) ') +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"),
plot.background = element_rect(fill = 'white',color='white'))+
theme(plot.margin=unit(c(5.5, 25.5, 5.5, 25.5),"points"))
plt_b <- ggplot(data = fmri_data,
mapping = aes(x = case_strength_mean,y = punishment_mean)) +
geom_point(color='black',size=2) +
geom_smooth(method='lm', formula= y~x, colour = "black") +
scale_x_continuous(limits = c(0, 25)) +
scale_y_continuous(limits = c(0, 85)) +
xlab('Case Strength') +
ylab('Punishment')
panel_B <- plt_b + th +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"))+
theme(plot.margin=unit(c(5, 5.5, 25.5, 25.5),"points"))
panel_B
fmri_data.pca <- prcomp(fmri_data[,c(2:3)],
center = TRUE,
scale. = TRUE)
#summary
summary(fmri_data.pca)
#loadings
fmri_data.pca$rotation
#scores
fmri_data.pca$x
pct_var_exp<- get_eig(fmri_data.pca)
pct_var_exp <- cbind(PC = rownames(pct_var_exp), pct_var_exp)
rownames(pct_var_exp) <- 1:nrow(pct_var_exp)
pct_var_exp$PC_name[pct_var_exp$PC == "Dim.1"] <- "1"
pct_var_exp$PC_name[pct_var_exp$PC == "Dim.2"] <- "2"
pct_var_exp$PC<-pct_var_exp$PC_name
h <- ggplot(pct_var_exp, aes(x = PC, y = variance.percent)) +
geom_point(stat = "identity", size=5)
library(factoextra)
#pca & plot
fmri_data.pca <- prcomp(fmri_data[,c(2:3)],
center = TRUE,
scale. = TRUE)
#summary
summary(fmri_data.pca)
#loadings
fmri_data.pca$rotation
#scores
fmri_data.pca$x
pct_var_exp<- get_eig(fmri_data.pca)
pct_var_exp <- cbind(PC = rownames(pct_var_exp), pct_var_exp)
rownames(pct_var_exp) <- 1:nrow(pct_var_exp)
pct_var_exp$PC_name[pct_var_exp$PC == "Dim.1"] <- "1"
pct_var_exp$PC_name[pct_var_exp$PC == "Dim.2"] <- "2"
pct_var_exp$PC<-pct_var_exp$PC_name
h <- ggplot(pct_var_exp, aes(x = PC, y = variance.percent)) +
geom_point(stat = "identity", size=5)
panel_B_extra <- h + th + ylab('Variance Explained (%) ') +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"),
plot.background = element_rect(fill = 'white',color='white'))+
theme(plot.margin=unit(c(5.5, 25.5, 5.5, 25.5),"points"))
panel_B_extra
#run PCA on weights for case strength and punishment
#fmri sample
#read data
fmri_data <- read.csv(file="data/scenario_effects_fmri_sample.csv",
header=TRUE, sep = ",",
na.strings=c("","NA"))
#correlation plot
plt_b <- ggplot(data = fmri_data,
mapping = aes(x = case_strength_mean,y = punishment_mean)) +
geom_point(color='black',size=2) +
geom_smooth(method='lm', formula= y~x, colour = "black") +
scale_x_continuous(limits = c(0, 25)) +
scale_y_continuous(limits = c(0, 85)) +
xlab('Case Strength') +
ylab('Punishment')
panel_B <- g + th +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"))
panel_B
#correlation plot
plt_b <- ggplot(data = fmri_data,
mapping = aes(x = case_strength_mean,y = punishment_mean)) +
geom_point(color='black',size=2) +
geom_smooth(method='lm', formula= y~x, colour = "black") +
scale_x_continuous(limits = c(0, 25)) +
scale_y_continuous(limits = c(0, 85)) +
xlab('Case Strength') +
ylab('Punishment')
panel_B <- plt_b + th +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"))
panel_B
mturk_data <- read.csv(file="data/scenario_effects_mturk_sample.csv",
header=TRUE, sep = ",",
na.strings=c("","NA"))
plt_c <- ggplot(data = mturk_data,
mapping = aes(x = case_strength_mean,y = punishment_mean)) +
geom_point(color='black',size=2) +
geom_smooth(method='lm', formula= y~x, colour = "black") +
scale_x_continuous(limits = c(0, 25)) +
scale_y_continuous(limits = c(0, 85)) +
xlab('Case Strength') +
ylab('Punishment')
panel_C <- plt_c + th +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"))
panel_C
combo_plot <- ggarrange(panel_A,panel_B, panel_C,
ncol = 3, widths = c(3,1,1),
labels = c("A","B","C"), font.label = list(size = 20))
library(ggpubr)
combo_plot <- ggarrange(panel_A,panel_B, panel_C,
ncol = 3, widths = c(3,1,1),
labels = c("A","B","C"), font.label = list(size = 20))
combo_plot
combo_plot <- ggarrange(panel_A,panel_B, panel_C,
ncol = 3, widths = c(1,1,1),
labels = c("A","B","C"), font.label = list(size = 20))
combo_plot
#pca & plot
fmri_data.pca <- prcomp(fmri_data[,c(2:3)],
center = TRUE,
scale. = TRUE)
#summary
summary(fmri_data.pca)
#loadings
fmri_data.pca$rotation
#scores
fmri_data.pca$x
h <- ggplot(pct_var_exp, aes(x = PC, y = variance.percent)) +
geom_point(stat = "identity", size=5)
panel_B <- h + th + ylab('Variance Explained (%) ') +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"),
plot.background = element_rect(fill = 'white',color='white'))+
theme(plot.margin=unit(c(5.5, 25.5, 5.5, 25.5),"points"))
panel_B
h <- fviz_eig(fmri_data.pca, geom="line", addlabels = FALSE, ylim = c(0, 100),
linecolor = c('black'),
xlab=c('PC')) +
labs(title=" ")
h
h <- ggplot(pct_var_exp, aes(x = PC, y = variance.percent)) +
geom_point(stat = "identity", size=5)
panel_B <- h + th + ylab('Variance Explained (%) ') +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"),
plot.background = element_rect(fill = 'white',color='white'))+
theme(plot.margin=unit(c(5.5, 25.5, 5.5, 25.5),"points"))
panel_B
mturk_data <- read.csv(file="data/scenario_effects_mturk_sample.csv",
header=TRUE, sep = ",",
na.strings=c("","NA"))
#pca & plot
mturk_data.pca <- prcomp(mturk_data[,c(2:3)],
center = TRUE,
scale. = TRUE)
#summary
summary(mturk_data.pca)
#loadings
mturk_data.pca$rotation
#scores
mturk_data.pca$x
pct_var_exp<- get_eig(mturk_data.pca)
pct_var_exp <- cbind(PC = rownames(pct_var_exp), pct_var_exp)
rownames(pct_var_exp) <- 1:nrow(pct_var_exp)
pct_var_exp$PC_name[pct_var_exp$PC == "Dim.1"] <- "1"
pct_var_exp$PC_name[pct_var_exp$PC == "Dim.2"] <- "2"
pct_var_exp$PC<-pct_var_exp$PC_name
j <- ggplot(pct_var_exp, aes(x = PC, y = variance.percent)) +
geom_point(stat = "identity", size=5)
panel_C <- j + th + ylab('Variance Explained (%) ') +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"),
plot.background = element_rect(fill = 'white',color='white'))+
theme(plot.margin=unit(c(5.5, 25.5, 5.5, 25.5),"points"))
panel_C
combo_plot <- ggarrange(panel_A,panel_B, panel_C,
ncol = 3, widths = c(1,1,1),
labels = c("A","B","C"), font.label = list(size = 20))
panel_C
combo_plot
ggsave('figs/supp_fig_X.pdf', plot=combo_plot, width=13, height=6, units='in', useDingbats=FALSE)
panel_C <- j + th + ylab('Variance Explained (%) ') +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"),
plot.background = element_rect(fill = 'white',color='white'))+
theme(plot.margin=unit(c(5.5, 25.5, 5.5, 25.5),"points")) +
scale_y_continuous(limits = c(0, 100))
panel_C
panel_B <- h + th + ylab('Variance Explained (%) ') +
theme(text=element_text(family="Helvetica"),
plot.title = element_text(family="Helvetica",face="bold"),
plot.background = element_rect(fill = 'white',color='white'))+
theme(plot.margin=unit(c(5.5, 25.5, 5.5, 25.5),"points")) +
scale_y_continuous(limits = c(0, 100))
panel_B
combo_plot <- ggarrange(panel_A,panel_B, panel_C,
ncol = 3, widths = c(1,1,1),
labels = c("A","B","C"), font.label = list(size = 20))
# save to disk
ggsave('figs/supp_fig_X.pdf', plot=combo_plot, width=13, height=6, units='in', useDingbats=FALSE)
combo_plot <- ggarrange(panel_A,panel_B, panel_C,
ncol = 3, widths = c(1,1,1),align = 'hv',
labels = c("A","B","C"), font.label = list(size = 20))
# save to disk
ggsave('figs/supp_fig_X.pdf', plot=combo_plot, width=13, height=6, units='in', useDingbats=FALSE)
